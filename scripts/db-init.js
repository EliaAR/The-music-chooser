require("dotenv").config();

const { Pool } = require("pg");

let pool;

const dropTableRooms = "DROP TABLE IF EXISTS rooms CASCADE";
const dropTableSongs = "DROP TABLE IF EXISTS songs CASCADE";

const createTableRooms =
  "CREATE TABLE rooms (id_room INT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, name_room VARCHAR(64) NOT NULL, url_room TEXT UNIQUE NOT NULL, is_closed BOOLEAN DEFAULT false)";
const createTableSongs =
  "CREATE TABLE songs (id_song INT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, id_room INT NOT NULL CONSTRAINT fk_idroom REFERENCES rooms ON DELETE CASCADE, name_song TEXT NOT NULL, url_song TEXT NOT NULL, img TEXT, audio TEXT, expire INT NOT NULL, votos INT DEFAULT 0 CONSTRAINT chk_votos CHECK (votos >= 0))";

const alterTableRooms =
  "ALTER TABLE rooms ADD COLUMN current_song INT CONSTRAINT fk_current_song  REFERENCES songs (id_song) ON DELETE SET NULL";

async function main() {
  try {
    if (process.env.ISLOCAL === "true") {
      pool = new Pool();
    } else {
      if (!process.env.POSTGRES_URL) {
        throw new Error("POSTGRES_URL not found");
      }
      pool = new Pool({
        connectionString: `${process.env.POSTGRES_URL}?sslmode=require`,
      });
    }
    await pool.query(dropTableRooms);
    await pool.query(dropTableSongs);
    await pool.query(createTableRooms);
    await pool.query(createTableSongs);
    await pool.query(alterTableRooms);
    await pool.end();
  } catch (error) {
    console.log(error);
  }
}
main();
